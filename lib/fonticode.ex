defmodule Fonticode do
  @moduledoc """
  Documentation for `Fonticode`.
  """

  @doc """
  Hello world.

  ## Examples

      iex> Fonticode.hello()
      :world

  """
  def hello do
    :world
  end

  @type format_mode ::
          :noop
          | :sans_serif
          | :serif
          | :cursive
          | :blackboard_bold
          | :block
          | :black_filled
          | :bubble
          | :bubble_filled
          | :gothic
          | :small_caps
          | :aesthetic
          | :monospace
          | :bold
          | :superscript
          | :italic

  @type substitution_map :: %{String.t() => String.t()}

  def modes() do
    [
      :noop,
      :sans_serif,
      :cursive,
      :blackboard_bold,
      :block,
      :block_filled,
      :bubble,
      :bubble_filled,
      :gothic,
      :small_caps,
      :aesthetic,
      :monospace,
      :bold,
      :superscript,
      :italic
    ]
  end

  @spec format(String.t(), format_mode) :: String.t()
  def format(text, :noop), do: text

  def format(text, :sans_serif) do
    substitute(text, %{
      "a" => "𝖺",
      "A" => "𝖠",
      "b" => "𝖻",
      "B" => "𝖡",
      "c" => "𝖼",
      "C" => "𝖢",
      "d" => "𝖽",
      "D" => "𝖣",
      "e" => "𝖾",
      "E" => "𝖤",
      "f" => "𝖿",
      "F" => "𝖥",
      "g" => "𝗀",
      "G" => "𝖦",
      "h" => "𝗁",
      "H" => "𝖧",
      "i" => "𝗂",
      "I" => "𝖨",
      "j" => "𝗃",
      "J" => "𝖩",
      "k" => "𝗄",
      "K" => "𝖪",
      "l" => "𝗅",
      "L" => "𝖫",
      "m" => "𝗆",
      "M" => "𝖬",
      "n" => "𝗇",
      "N" => "𝖭",
      "o" => "𝗈",
      "O" => "𝖮",
      "p" => "𝗉",
      "P" => "𝖯",
      "q" => "𝗊",
      "Q" => "𝖰",
      "r" => "𝗋",
      "R" => "𝖱",
      "s" => "𝗌",
      "S" => "𝖲",
      "t" => "𝗍",
      "T" => "𝖳",
      "u" => "𝗎",
      "U" => "𝖴",
      "v" => "𝗏",
      "V" => "𝖵",
      "w" => "𝗐",
      "W" => "𝖶",
      "x" => "𝗑",
      "X" => "𝖷",
      "y" => "𝗒",
      "Y" => "𝖸",
      "z" => "𝗓",
      "Z" => "𝖹",
      "1" => "𝟣",
      "2" => "𝟤",
      "3" => "𝟥",
      "4" => "𝟦",
      "5" => "𝟧",
      "6" => "𝟨",
      "7" => "𝟩",
      "8" => "𝟪",
      "9" => "𝟫",
      "0" => "𝟢"
    })
  end

  def format(text, :cursive) do
    substitute(text, %{
      "a" => "𝒶",
      "A" => "𝒜",
      "b" => "𝒷",
      "B" => "ℬ",
      "c" => "𝒸",
      "C" => "𝒞",
      "d" => "𝒹",
      "D" => "𝒟",
      "e" => "ℯ",
      "E" => "ℰ",
      "f" => "𝒻",
      "F" => "ℱ",
      "g" => "ℊ",
      "G" => "𝒢",
      "h" => "𝒽",
      "H" => "ℋ",
      "i" => "𝒾",
      "I" => "ℐ",
      "j" => "𝒿",
      "J" => "𝒥",
      "k" => "𝓀",
      "K" => "𝒦",
      "l" => "𝓁",
      "L" => "ℒ",
      "m" => "𝓂",
      "M" => "ℳ",
      "n" => "𝓃",
      "N" => "𝒩",
      "o" => "ℴ",
      "O" => "𝒪",
      "p" => "𝓅",
      "P" => "𝒫",
      "q" => "𝓆",
      "Q" => "𝒬",
      "r" => "𝓇",
      "R" => "ℛ",
      "s" => "𝓈",
      "S" => "𝒮",
      "t" => "𝓉",
      "T" => "𝒯",
      "u" => "𝓊",
      "U" => "𝒰",
      "v" => "𝓋",
      "V" => "𝒱",
      "w" => "𝓌",
      "W" => "𝒲",
      "x" => "𝓍",
      "X" => "𝒳",
      "y" => "𝓎",
      "Y" => "𝒴",
      "z" => "𝓏",
      "Z" => "𝒵"
    })
  end

  def format(text, :blackboard_bold) do
    substitute(text, %{
      "a" => "𝕒",
      "A" => "𝔸",
      "b" => "𝕓",
      "B" => "𝔹",
      "c" => "𝕔",
      "C" => "ℂ",
      "d" => "𝕕",
      "D" => "𝔻",
      "e" => "𝕖",
      "E" => "𝔼",
      "f" => "𝕗",
      "F" => "𝔽",
      "g" => "𝕘",
      "G" => "𝔾",
      "h" => "𝕙",
      "H" => "ℍ",
      "i" => "𝕚",
      "I" => "𝕀",
      "j" => "𝕛",
      "J" => "𝕁",
      "k" => "𝕜",
      "K" => "𝕂",
      "l" => "𝕝",
      "L" => "𝕃",
      "m" => "𝕞",
      "M" => "𝕄",
      "n" => "𝕟",
      "N" => "ℕ",
      "o" => "𝕠",
      "O" => "𝕆",
      "p" => "𝕡",
      "P" => "ℙ",
      "q" => "𝕢",
      "Q" => "ℚ",
      "r" => "𝕣",
      "R" => "ℝ",
      "s" => "𝕤",
      "S" => "𝕊",
      "t" => "𝕥",
      "T" => "𝕋",
      "u" => "𝕦",
      "U" => "𝕌",
      "v" => "𝕧",
      "V" => "𝕍",
      "w" => "𝕨",
      "W" => "𝕎",
      "x" => "𝕩",
      "X" => "𝕏",
      "y" => "𝕪",
      "Y" => "𝕐",
      "z" => "𝕫",
      "Z" => "ℤ",
      "1" => "𝟙",
      "2" => "𝟚",
      "3" => "𝟛",
      "4" => "𝟜",
      "5" => "𝟝",
      "6" => "𝟞",
      "7" => "𝟟",
      "8" => "𝟠",
      "9" => "𝟡",
      "0" => "𝟘"
    })
  end

  def format(text, :block) do
    substitute(text, %{
      "a" => "🄰",
      "A" => "🄰",
      "b" => "🄱",
      "B" => "🄱",
      "c" => "🄲",
      "C" => "🄲",
      "d" => "🄳",
      "D" => "🄳",
      "e" => "🄴",
      "E" => "🄴",
      "f" => "🄵",
      "F" => "🄵",
      "g" => "🄶",
      "G" => "🄶",
      "h" => "🄷",
      "H" => "🄷",
      "i" => "🄸",
      "I" => "🄸",
      "j" => "🄹",
      "J" => "🄹",
      "k" => "🄺",
      "K" => "🄺",
      "l" => "🄻",
      "L" => "🄻",
      "m" => "🄼",
      "M" => "🄼",
      "n" => "🄽",
      "N" => "🄽",
      "o" => "🄾",
      "O" => "🄾",
      "p" => "🄿",
      "P" => "🄿",
      "q" => "🅀",
      "Q" => "🅀",
      "r" => "🅁",
      "R" => "🅁",
      "s" => "🅂",
      "S" => "🅂",
      "t" => "🅃",
      "T" => "🅃",
      "u" => "🅄",
      "U" => "🅄",
      "v" => "🅅",
      "V" => "🅅",
      "w" => "🅆",
      "W" => "🅆",
      "x" => "🅇",
      "X" => "🅇",
      "y" => "🅈",
      "Y" => "🅈",
      "z" => "🅉",
      "Z" => "🅉"
    })
  end

  def format(text, :block_filled) do
    substitute(text, %{
      "a" => "🅰",
      "A" => "🅰",
      "b" => "🅱",
      "B" => "🅱",
      "c" => "🅲",
      "C" => "🅲",
      "d" => "🅳",
      "D" => "🅳",
      "e" => "🅴",
      "E" => "🅴",
      "f" => "🅵",
      "F" => "🅵",
      "g" => "🅶",
      "G" => "🅶",
      "h" => "🅷",
      "H" => "🅷",
      "i" => "🅸",
      "I" => "🅸",
      "j" => "🅹",
      "J" => "🅹",
      "k" => "🅺",
      "K" => "🅺",
      "l" => "🅻",
      "L" => "🅻",
      "m" => "🅼",
      "M" => "🅼",
      "n" => "🅽",
      "N" => "🅽",
      "o" => "🅾",
      "O" => "🅾",
      "p" => "🅿",
      "P" => "🅿",
      "q" => "🆀",
      "Q" => "🆀",
      "r" => "🆁",
      "R" => "🆁",
      "s" => "🆂",
      "S" => "🆂",
      "t" => "🆃",
      "T" => "🆃",
      "u" => "🆄",
      "U" => "🆄",
      "v" => "🆅",
      "V" => "🆅",
      "w" => "🆆",
      "W" => "🆆",
      "x" => "🆇",
      "X" => "🆇",
      "y" => "🆈",
      "Y" => "🆈",
      "z" => "🆉",
      "Z" => "🆉"
    })
  end

  def format(text, :bubble) do
    substitute(text, %{
      "a" => "ⓐ",
      "A" => "Ⓐ",
      "b" => "ⓑ",
      "B" => "Ⓑ",
      "c" => "ⓒ",
      "C" => "Ⓒ",
      "d" => "ⓓ",
      "D" => "Ⓓ",
      "e" => "ⓔ",
      "E" => "Ⓔ",
      "f" => "ⓕ",
      "F" => "Ⓕ",
      "g" => "ⓖ",
      "G" => "Ⓖ",
      "h" => "ⓗ",
      "H" => "Ⓗ",
      "i" => "ⓘ",
      "I" => "Ⓘ",
      "j" => "ⓙ",
      "J" => "Ⓙ",
      "k" => "ⓚ",
      "K" => "Ⓚ",
      "l" => "ⓛ",
      "L" => "Ⓛ",
      "m" => "ⓜ",
      "M" => "Ⓜ",
      "n" => "ⓝ",
      "N" => "Ⓝ",
      "o" => "ⓞ",
      "O" => "Ⓞ",
      "p" => "ⓟ",
      "P" => "Ⓟ",
      "q" => "ⓠ",
      "Q" => "Ⓠ",
      "r" => "ⓡ",
      "R" => "Ⓡ",
      "s" => "ⓢ",
      "S" => "Ⓢ",
      "t" => "ⓣ",
      "T" => "Ⓣ",
      "u" => "ⓤ",
      "U" => "Ⓤ",
      "v" => "ⓥ",
      "V" => "Ⓥ",
      "w" => "ⓦ",
      "W" => "Ⓦ",
      "x" => "ⓧ",
      "X" => "Ⓧ",
      "y" => "ⓨ",
      "Y" => "Ⓨ",
      "z" => "ⓩ",
      "Z" => "Ⓩ",
      "1" => "①",
      "2" => "②",
      "3" => "③",
      "4" => "④",
      "5" => "⑤",
      "6" => "⑥",
      "7" => "⑦",
      "8" => "⑧",
      "9" => "⑨",
      "0" => "⓪"
    })
  end

  def format(text, :bubble_filled) do
    substitute(text, %{
      "a" => "🅐",
      "A" => "🅐",
      "b" => "🅑",
      "B" => "🅑",
      "c" => "🅒",
      "C" => "🅒",
      "d" => "🅓",
      "D" => "🅓",
      "e" => "🅔",
      "E" => "🅔",
      "f" => "🅕",
      "F" => "🅕",
      "g" => "🅖",
      "G" => "🅖",
      "h" => "🅗",
      "H" => "🅗",
      "i" => "🅘",
      "I" => "🅘",
      "j" => "🅙",
      "J" => "🅙",
      "k" => "🅚",
      "K" => "🅚",
      "l" => "🅛",
      "L" => "🅛",
      "m" => "🅜",
      "M" => "🅜",
      "n" => "🅝",
      "N" => "🅝",
      "o" => "🅞",
      "O" => "🅞",
      "p" => "🅟",
      "P" => "🅟",
      "q" => "🅠",
      "Q" => "🅠",
      "r" => "🅡",
      "R" => "🅡",
      "s" => "🅢",
      "S" => "🅢",
      "t" => "🅣",
      "T" => "🅣",
      "u" => "🅤",
      "U" => "🅤",
      "v" => "🅥",
      "V" => "🅥",
      "w" => "🅦",
      "W" => "🅦",
      "x" => "🅧",
      "X" => "🅧",
      "y" => "🅨",
      "Y" => "🅨",
      "z" => "🅩",
      "Z" => "🅩",
      "1" => "➊",
      "2" => "➋",
      "3" => "➌",
      "4" => "➍",
      "5" => "➎",
      "6" => "➏",
      "7" => "➐",
      "8" => "➑",
      "9" => "➒",
      "0" => "⓿"
    })
  end

  def format(text, :gothic) do
    substitute(text, %{
      "a" => "𝔞",
      "A" => "𝔄",
      "b" => "𝔟",
      "B" => "𝔅",
      "c" => "𝔠",
      "C" => "ℭ",
      "d" => "𝔡",
      "D" => "𝔇",
      "e" => "𝔢",
      "E" => "𝔈",
      "f" => "𝔣",
      "F" => "𝔉",
      "g" => "𝔤",
      "G" => "𝔊",
      "h" => "𝔥",
      "H" => "ℌ",
      "i" => "𝔦",
      "I" => "ℑ",
      "j" => "𝔧",
      "J" => "𝔍",
      "k" => "𝔨",
      "K" => "𝔎",
      "l" => "𝔩",
      "L" => "𝔏",
      "m" => "𝔪",
      "M" => "𝔐",
      "n" => "𝔫",
      "N" => "𝔑",
      "o" => "𝔬",
      "O" => "𝔒",
      "p" => "𝔭",
      "P" => "𝔓",
      "q" => "𝔮",
      "Q" => "𝔔",
      "r" => "𝔯",
      "R" => "ℜ",
      "s" => "𝔰",
      "S" => "𝔖",
      "t" => "𝔱",
      "T" => "𝔗",
      "u" => "𝔲",
      "U" => "𝔘",
      "v" => "𝔳",
      "V" => "𝔙",
      "w" => "𝔴",
      "W" => "𝔚",
      "x" => "𝔵",
      "X" => "𝔛",
      "y" => "𝔶",
      "Y" => "𝔜",
      "z" => "𝔷",
      "Z" => "ℨ"
    })
  end

  def format(text, :small_caps) do
    substitute(text, %{
      "a" => "ᴀ",
      "b" => "ʙ",
      "c" => "ᴄ",
      "d" => "ᴅ",
      "e" => "ᴇ",
      "f" => "ғ",
      "g" => "ɢ",
      "h" => "ʜ",
      "i" => "ɪ",
      "j" => "ᴊ",
      "k" => "ᴋ",
      "l" => "ʟ",
      "m" => "ᴍ",
      "n" => "ɴ",
      "o" => "ᴏ",
      "p" => "ᴘ",
      "q" => "ǫ",
      "r" => "ʀ",
      "s" => "s",
      "t" => "ᴛ",
      "u" => "ᴜ",
      "v" => "ᴠ",
      "w" => "ᴡ",
      "x" => "x",
      "y" => "ʏ",
      "z" => "ᴢ"
    })
  end

  def format(text, :aesthetic) do
    substitute(text, %{
      "a" => "ａ",
      "A" => "Ａ",
      "b" => "ｂ",
      "B" => "Ｂ",
      "c" => "ｃ",
      "C" => "Ｃ",
      "d" => "ｄ",
      "D" => "Ｄ",
      "e" => "ｅ",
      "E" => "Ｅ",
      "f" => "ｆ",
      "F" => "Ｆ",
      "g" => "ｇ",
      "G" => "Ｇ",
      "h" => "ｈ",
      "H" => "Ｈ",
      "i" => "ｉ",
      "I" => "Ｉ",
      "j" => "ｊ",
      "J" => "Ｊ",
      "k" => "ｋ",
      "K" => "Ｋ",
      "l" => "ｌ",
      "L" => "Ｌ",
      "m" => "ｍ",
      "M" => "Ｍ",
      "n" => "ｎ",
      "N" => "Ｎ",
      "o" => "ｏ",
      "O" => "Ｏ",
      "p" => "ｐ",
      "P" => "Ｐ",
      "q" => "ｑ",
      "Q" => "Ｑ",
      "r" => "ｒ",
      "R" => "Ｒ",
      "s" => "ｓ",
      "S" => "Ｓ",
      "t" => "ｔ",
      "T" => "Ｔ",
      "u" => "ｕ",
      "U" => "Ｕ",
      "v" => "ｖ",
      "V" => "Ｖ",
      "w" => "ｗ",
      "W" => "Ｗ",
      "x" => "ｘ",
      "X" => "Ｘ",
      "y" => "ｙ",
      "Y" => "Ｙ",
      "z" => "ｚ",
      "Z" => "Ｚ",
      "1" => "１",
      "2" => "２",
      "3" => "３",
      "4" => "４",
      "5" => "５",
      "6" => "６",
      "7" => "７",
      "8" => "８",
      "9" => "９",
      "0" => "０",
      "<" => "＜",
      "~" => "～",
      ">" => "＞",
      "!" => "！",
      "." => "．",
      "@" => "＠",
      "/" => "／",
      "#" => "＃",
      "\\" => "＼",
      "$" => "＄",
      "?" => "？",
      "%" => "％",
      ";" => "；",
      "^" => "＾",
      ":" => "：",
      "&" => "＆",
      "'" => "＇",
      "*" => "＊",
      "\"" => "＂",
      "(" => "（",
      ")" => "）",
      "_" => "＿",
      "+" => "＋"
    })
  end

  def format(text, :monospace) do
    substitute(text, %{
      "a" => "𝚊",
      "A" => "𝙰",
      "b" => "𝚋",
      "B" => "𝙱",
      "c" => "𝚌",
      "C" => "𝙲",
      "d" => "𝚍",
      "D" => "𝙳",
      "e" => "𝚎",
      "E" => "𝙴",
      "f" => "𝚏",
      "F" => "𝙵",
      "g" => "𝚐",
      "G" => "𝙶",
      "h" => "𝚑",
      "H" => "𝙷",
      "i" => "𝚒",
      "I" => "𝙸",
      "j" => "𝚓",
      "J" => "𝙹",
      "k" => "𝚔",
      "K" => "𝙺",
      "l" => "𝚕",
      "L" => "𝙻",
      "m" => "𝚖",
      "M" => "𝙼",
      "n" => "𝚗",
      "N" => "𝙽",
      "o" => "𝚘",
      "O" => "𝙾",
      "p" => "𝚙",
      "P" => "𝙿",
      "q" => "𝚚",
      "Q" => "𝚀",
      "r" => "𝚛",
      "R" => "𝚁",
      "s" => "𝚜",
      "S" => "𝚂",
      "t" => "𝚝",
      "T" => "𝚃",
      "u" => "𝚞",
      "U" => "𝚄",
      "v" => "𝚟",
      "V" => "𝚅",
      "w" => "𝚠",
      "W" => "𝚆",
      "x" => "𝚡",
      "X" => "𝚇",
      "y" => "𝚢",
      "Y" => "𝚈",
      "z" => "𝚣",
      "Z" => "𝚉",
      "1" => "𝟷",
      "2" => "𝟸",
      "3" => "𝟹",
      "4" => "𝟺",
      "5" => "𝟻",
      "6" => "𝟼",
      "7" => "𝟽",
      "8" => "𝟾",
      "9" => "𝟿"
    })
  end

  def format(text, :bold) do
    substitute(text, %{
      "a" => "𝐚",
      "A" => "𝐀",
      "b" => "𝐛",
      "B" => "𝐁",
      "c" => "𝐜",
      "C" => "𝐂",
      "d" => "𝐝",
      "D" => "𝐃",
      "e" => "𝐞",
      "E" => "𝐄",
      "f" => "𝐟",
      "F" => "𝐅",
      "g" => "𝐠",
      "G" => "𝐆",
      "h" => "𝐡",
      "H" => "𝐇",
      "i" => "𝐢",
      "I" => "𝐈",
      "j" => "𝐣",
      "J" => "𝐉",
      "k" => "𝐤",
      "K" => "𝐊",
      "l" => "𝐥",
      "L" => "𝐋",
      "m" => "𝐦",
      "M" => "𝐌",
      "n" => "𝐧",
      "N" => "𝐍",
      "o" => "𝐨",
      "O" => "𝐎",
      "p" => "𝐩",
      "P" => "𝐏",
      "q" => "𝐪",
      "Q" => "𝐐",
      "r" => "𝐫",
      "R" => "𝐑",
      "s" => "𝐬",
      "S" => "𝐒",
      "t" => "𝐭",
      "T" => "𝐓",
      "u" => "𝐮",
      "U" => "𝐔",
      "v" => "𝐯",
      "V" => "𝐕",
      "w" => "𝐰",
      "W" => "𝐖",
      "x" => "𝐱",
      "X" => "𝐗",
      "y" => "𝐲",
      "Y" => "𝐘",
      "z" => "𝐳",
      "Z" => "𝐙",
      "1" => "𝟏",
      "2" => "𝟐",
      "3" => "𝟑",
      "4" => "𝟒",
      "5" => "𝟓",
      "6" => "𝟔",
      "7" => "𝟕",
      "8" => "𝟖",
      "9" => "𝟗",
      "0" => "𝟎"
    })
  end

  def format(text, :superscript) do
    substitute(text, %{
      "a" => "ᵃ",
      "A" => "ᴬ",
      "b" => "ᵇ",
      "B" => "ᴮ",
      "c" => "ᶜ",
      "C" => "ꟲ",
      "d" => "ᵈ",
      "D" => "ᴰ",
      "e" => "ᵉ",
      "E" => "ᴱ",
      "f" => "ᶠ",
      "F" => "ꟳ",
      "g" => "ᵍ",
      "G" => "ᴳ",
      "h" => "ʰ",
      "H" => "ᴴ",
      "i" => "ᶦ",
      "I" => "ᴵ",
      "j" => "ʲ",
      "J" => "ᴶ",
      "k" => "ᵏ",
      "K" => "ᴷ",
      "l" => "ˡ",
      "L" => "ᴸ",
      "m" => "ᵐ",
      "M" => "ᴹ",
      "n" => "ⁿ",
      "N" => "ᴺ",
      "o" => "ᵒ",
      "O" => "ᴼ",
      "p" => "ᵖ",
      "P" => "ᴾ",
      "q" => "𐞥",
      "Q" => "ꟴ",
      "r" => "ʳ",
      "R" => "ᴿ",
      "s" => "ˢ",
      "S" => "ˢ",
      "t" => "ᵗ",
      "T" => "ᵀ",
      "u" => "ᵘ",
      "U" => "ᵁ",
      "v" => "ᵛ",
      "V" => "ⱽ",
      "w" => "ʷ",
      "W" => "ᵂ",
      "x" => "ˣ",
      "X" => "ˣ",
      "y" => "ʸ",
      "Y" => "ʸ",
      "z" => "ᶻ",
      "Z" => "ᶻ",
      "1" => "¹",
      "2" => "²",
      "3" => "³",
      "4" => "⁴",
      "5" => "⁵",
      "6" => "⁶",
      "7" => "⁷",
      "8" => "⁸",
      "9" => "⁹",
      "0" => "⁰",
      "(" => "⁽",
      ")" => "⁾",
      "+" => "⁺"
    })
  end

  def format(text, :italic) do
    substitute(text, %{
      "a" => "𝑎",
      "A" => "𝐴",
      "b" => "𝑏",
      "B" => "𝐵",
      "c" => "𝑐",
      "C" => "𝐶",
      "d" => "𝑑",
      "D" => "𝐷",
      "e" => "𝑒",
      "E" => "𝐸",
      "f" => "𝑓",
      "F" => "𝐹",
      "g" => "𝑔",
      "G" => "𝐺",
      "h" => "ℎ",
      "H" => "𝐻",
      "i" => "𝑖",
      "I" => "𝐼",
      "j" => "𝑗",
      "J" => "𝐽",
      "k" => "𝑘",
      "K" => "𝐾",
      "l" => "𝑙",
      "L" => "𝐿",
      "m" => "𝑚",
      "M" => "𝑀",
      "n" => "𝑛",
      "N" => "𝑁",
      "o" => "𝑜",
      "O" => "𝑂",
      "p" => "𝑝",
      "P" => "𝑃",
      "q" => "𝑞",
      "Q" => "𝑄",
      "r" => "𝑟",
      "R" => "𝑅",
      "s" => "𝑠",
      "S" => "𝑆",
      "t" => "𝑡",
      "T" => "𝑇",
      "u" => "𝑢",
      "U" => "𝑈",
      "v" => "𝑣",
      "V" => "𝑉",
      "w" => "𝑤",
      "W" => "𝑊",
      "x" => "𝑥",
      "X" => "𝑋",
      "y" => "𝑦",
      "Y" => "𝑌",
      "z" => "𝑧",
      "Z" => "𝑍"
    })
  end

  # taken from:
  # https://elixirforum.com/t/is-there-a-faster-way-to-write-this-code/18486/3
  @spec substitute(String.t(), substitution_map) :: String.t()
  def substitute(data, subs) when is_binary(data) and is_map(subs) do
    match_list = :binary.matches(data, Map.keys(subs))
    IO.iodata_to_binary(do_replace(data, match_list, subs, 0))
  end

  @spec do_replace(String.t(), [{non_neg_integer, integer}], substitution_map, non_neg_integer) ::
          [any]
  defp do_replace(h, [], _, n)
       when is_binary(h) and is_integer(n) do
    [:binary.part(h, {n, byte_size(h) - n})]
  end

  defp do_replace(h, [{a, b} | t], subs, n)
       when is_binary(h) and
              is_map(subs) and
              is_list(t) and
              is_integer(a) and
              is_integer(b) and
              is_integer(n) do
    [
      :binary.part(h, {n, a - n}),
      Map.get(subs, :binary.part(h, {a, b}))
      | do_replace(h, t, subs, a + b)
    ]
  end
end
